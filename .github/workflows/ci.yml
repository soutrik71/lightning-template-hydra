name: CI Pipeline

on:
  push:
    branches:
      - main
      - feat/*
  pull_request:
    branches:
      - main
      - feat/*

jobs:
  test:
    name: Test on Python code
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.10.14]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Install Poetry and set virtualenv to be created inside the project directory
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.in-project true  # Ensures the virtual environment is created in the project directory

      # Cache Poetry dependencies
      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: |
            pytorch_project/.venv  # Cache the virtual environment in the project directory
            ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('pytorch_project/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # Install dependencies with Poetry
      - name: Install dependencies
        working-directory: pytorch_project
        run: |
          poetry install

      # Activate the Poetry environment globally and run tests
      - name: Run tests with coverage
        run: |
          source pytorch_project/.venv/bin/activate  # Activate the virtual environment
          pytest --cov=pytorch_project --cov-report=xml --cov-report=term -v  # Run tests with coverage

      # Upload the coverage XML report as an artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml  # Path where pytest saves coverage.xml

      # Run lint check at the root level
      - name: Run lint checks
        run: |
          source pytorch_project/.venv/bin/activate  # Activate virtual environment for linting
          flake8 .

      # Check Poetry environment
      - name: Check Poetry environment
        run: |
          source pytorch_project/.venv/bin/activate  # Activate virtual environment for Poetry check
          poetry env info
